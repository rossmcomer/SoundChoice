// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String
  password String
  role     String   @default("client")
  createdAt DateTime @default(now())
  bookings Booking[]
  questionnaires Questionnaire[]
}

model Booking {
  id         String   @id @default(uuid())
  userId     String
  user       User     @relation(fields: [userId], references: [id])
  eventDate  DateTime
  startTime  DateTime
  endTime    DateTime
  location   String
  status     String   @default("pending")
  paymentStatus String @default("unpaid")
  payment   Payment?
}

model Payment {
  id          String   @id @default(uuid())
  bookingId   String
  amount      Float
  status      String
  method      String
  transactionId String
  booking     Booking  @relation(fields: [bookingId], references: [id])
}

model Questionnaire {
  id          String   @id @default(uuid())
  userId      String
  bookingId   String
  answers     Json
  lastUpdated DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  booking     Booking  @relation(fields: [bookingId], references: [id])
}

model Availability {
  id          String   @id @default(uuid())
  date        DateTime
  startTime   DateTime
  endTime     DateTime
  isAvailable Boolean
}